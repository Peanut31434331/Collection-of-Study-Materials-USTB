/**
 * generated by Xtext 2.25.0
 */
package org.xtext.test.minijava.minijava;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see org.xtext.test.minijava.minijava.MinijavaFactory
 * @model kind="package"
 * @generated
 */
public interface MinijavaPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "minijava";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.xtext.org/test/minijava/Minijava";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "minijava";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  MinijavaPackage eINSTANCE = org.xtext.test.minijava.minijava.impl.MinijavaPackageImpl.init();

  /**
   * The meta object id for the '{@link org.xtext.test.minijava.minijava.impl.GoalImpl <em>Goal</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.test.minijava.minijava.impl.GoalImpl
   * @see org.xtext.test.minijava.minijava.impl.MinijavaPackageImpl#getGoal()
   * @generated
   */
  int GOAL = 0;

  /**
   * The feature id for the '<em><b>Package</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GOAL__PACKAGE = 0;

  /**
   * The feature id for the '<em><b>Importdecl</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GOAL__IMPORTDECL = 1;

  /**
   * The feature id for the '<em><b>Class Declarations</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GOAL__CLASS_DECLARATIONS = 2;

  /**
   * The number of structural features of the '<em>Goal</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GOAL_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.test.minijava.minijava.impl.QualifiedNameListImpl <em>Qualified Name List</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.test.minijava.minijava.impl.QualifiedNameListImpl
   * @see org.xtext.test.minijava.minijava.impl.MinijavaPackageImpl#getQualifiedNameList()
   * @generated
   */
  int QUALIFIED_NAME_LIST = 1;

  /**
   * The feature id for the '<em><b>Qualified Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int QUALIFIED_NAME_LIST__QUALIFIED_NAME = 0;

  /**
   * The feature id for the '<em><b>Qualified Name Li</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int QUALIFIED_NAME_LIST__QUALIFIED_NAME_LI = 1;

  /**
   * The number of structural features of the '<em>Qualified Name List</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int QUALIFIED_NAME_LIST_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.test.minijava.minijava.impl.QualifiedNameLiImpl <em>Qualified Name Li</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.test.minijava.minijava.impl.QualifiedNameLiImpl
   * @see org.xtext.test.minijava.minijava.impl.MinijavaPackageImpl#getQualifiedNameLi()
   * @generated
   */
  int QUALIFIED_NAME_LI = 2;

  /**
   * The feature id for the '<em><b>Qualified Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int QUALIFIED_NAME_LI__QUALIFIED_NAME = 0;

  /**
   * The feature id for the '<em><b>Qualified Name Li</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int QUALIFIED_NAME_LI__QUALIFIED_NAME_LI = 1;

  /**
   * The number of structural features of the '<em>Qualified Name Li</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int QUALIFIED_NAME_LI_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.test.minijava.minijava.impl.MainClassImpl <em>Main Class</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.test.minijava.minijava.impl.MainClassImpl
   * @see org.xtext.test.minijava.minijava.impl.MinijavaPackageImpl#getMainClass()
   * @generated
   */
  int MAIN_CLASS = 3;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAIN_CLASS__NAME = 0;

  /**
   * The feature id for the '<em><b>Var Declarations</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAIN_CLASS__VAR_DECLARATIONS = 1;

  /**
   * The feature id for the '<em><b>Method Declarations</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAIN_CLASS__METHOD_DECLARATIONS = 2;

  /**
   * The feature id for the '<em><b>Statement</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAIN_CLASS__STATEMENT = 3;

  /**
   * The number of structural features of the '<em>Main Class</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAIN_CLASS_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link org.xtext.test.minijava.minijava.impl.ClassDeclarationImpl <em>Class Declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.test.minijava.minijava.impl.ClassDeclarationImpl
   * @see org.xtext.test.minijava.minijava.impl.MinijavaPackageImpl#getClassDeclaration()
   * @generated
   */
  int CLASS_DECLARATION = 4;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLASS_DECLARATION__NAME = 0;

  /**
   * The feature id for the '<em><b>Qualified Name</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLASS_DECLARATION__QUALIFIED_NAME = 1;

  /**
   * The feature id for the '<em><b>Qualified Name List</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLASS_DECLARATION__QUALIFIED_NAME_LIST = 2;

  /**
   * The feature id for the '<em><b>Var Declarations</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLASS_DECLARATION__VAR_DECLARATIONS = 3;

  /**
   * The feature id for the '<em><b>Method Declarations</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLASS_DECLARATION__METHOD_DECLARATIONS = 4;

  /**
   * The number of structural features of the '<em>Class Declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLASS_DECLARATION_FEATURE_COUNT = 5;

  /**
   * The meta object id for the '{@link org.xtext.test.minijava.minijava.impl.TypeImpl <em>Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.test.minijava.minijava.impl.TypeImpl
   * @see org.xtext.test.minijava.minijava.impl.MinijavaPackageImpl#getType()
   * @generated
   */
  int TYPE = 5;

  /**
   * The feature id for the '<em><b>Type Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE__TYPE_NAME = 0;

  /**
   * The feature id for the '<em><b>Qualified Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE__QUALIFIED_NAME = 1;

  /**
   * The feature id for the '<em><b>Var List</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE__VAR_LIST = 2;

  /**
   * The number of structural features of the '<em>Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.test.minijava.minijava.impl.VarListImpl <em>Var List</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.test.minijava.minijava.impl.VarListImpl
   * @see org.xtext.test.minijava.minijava.impl.MinijavaPackageImpl#getVarList()
   * @generated
   */
  int VAR_LIST = 8;

  /**
   * The number of structural features of the '<em>Var List</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_LIST_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.xtext.test.minijava.minijava.impl.VarDeclarationImpl <em>Var Declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.test.minijava.minijava.impl.VarDeclarationImpl
   * @see org.xtext.test.minijava.minijava.impl.MinijavaPackageImpl#getVarDeclaration()
   * @generated
   */
  int VAR_DECLARATION = 6;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_DECLARATION__VARIABLE = VAR_LIST_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Var Li</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_DECLARATION__VAR_LI = VAR_LIST_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Var Declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_DECLARATION_FEATURE_COUNT = VAR_LIST_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.test.minijava.minijava.impl.VariableImpl <em>Variable</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.test.minijava.minijava.impl.VariableImpl
   * @see org.xtext.test.minijava.minijava.impl.MinijavaPackageImpl#getVariable()
   * @generated
   */
  int VARIABLE = 7;

  /**
   * The feature id for the '<em><b>Variable Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE__VARIABLE_TYPE = 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE__NAME = 1;

  /**
   * The number of structural features of the '<em>Variable</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.test.minijava.minijava.impl.VarLiImpl <em>Var Li</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.test.minijava.minijava.impl.VarLiImpl
   * @see org.xtext.test.minijava.minijava.impl.MinijavaPackageImpl#getVarLi()
   * @generated
   */
  int VAR_LI = 9;

  /**
   * The number of structural features of the '<em>Var Li</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_LI_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.xtext.test.minijava.minijava.impl.MethodImpl <em>Method</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.test.minijava.minijava.impl.MethodImpl
   * @see org.xtext.test.minijava.minijava.impl.MinijavaPackageImpl#getMethod()
   * @generated
   */
  int METHOD = 10;

  /**
   * The feature id for the '<em><b>Method Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int METHOD__METHOD_TYPE = 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int METHOD__NAME = 1;

  /**
   * The feature id for the '<em><b>Var List</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int METHOD__VAR_LIST = 2;

  /**
   * The feature id for the '<em><b>Local Var Declarations</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int METHOD__LOCAL_VAR_DECLARATIONS = 3;

  /**
   * The feature id for the '<em><b>Statements</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int METHOD__STATEMENTS = 4;

  /**
   * The feature id for the '<em><b>Return Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int METHOD__RETURN_EXPRESSION = 5;

  /**
   * The number of structural features of the '<em>Method</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int METHOD_FEATURE_COUNT = 6;

  /**
   * The meta object id for the '{@link org.xtext.test.minijava.minijava.impl.StatementImpl <em>Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.test.minijava.minijava.impl.StatementImpl
   * @see org.xtext.test.minijava.minijava.impl.MinijavaPackageImpl#getStatement()
   * @generated
   */
  int STATEMENT = 11;

  /**
   * The feature id for the '<em><b>Statement Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT__STATEMENT_TYPE = 0;

  /**
   * The feature id for the '<em><b>Statements</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT__STATEMENTS = 1;

  /**
   * The feature id for the '<em><b>First Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT__FIRST_EXPRESSION = 2;

  /**
   * The feature id for the '<em><b>Variable</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT__VARIABLE = 3;

  /**
   * The feature id for the '<em><b>Is Array Element Assignment</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT__IS_ARRAY_ELEMENT_ASSIGNMENT = 4;

  /**
   * The feature id for the '<em><b>Second Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT__SECOND_EXPRESSION = 5;

  /**
   * The number of structural features of the '<em>Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT_FEATURE_COUNT = 6;

  /**
   * The meta object id for the '{@link org.xtext.test.minijava.minijava.impl.ExprImpl <em>Expr</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.test.minijava.minijava.impl.ExprImpl
   * @see org.xtext.test.minijava.minijava.impl.MinijavaPackageImpl#getExpr()
   * @generated
   */
  int EXPR = 12;

  /**
   * The feature id for the '<em><b>Addition</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR__ADDITION = 0;

  /**
   * The feature id for the '<em><b>Multiplication</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR__MULTIPLICATION = 1;

  /**
   * The feature id for the '<em><b>Negation Or Point Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR__NEGATION_OR_POINT_EXPRESSION = 2;

  /**
   * The feature id for the '<em><b>Point</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR__POINT = 3;

  /**
   * The feature id for the '<em><b>Expression Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR__EXPRESSION_TYPE = 4;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR__RIGHT = 5;

  /**
   * The feature id for the '<em><b>Square Brackets</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR__SQUARE_BRACKETS = 6;

  /**
   * The feature id for the '<em><b>Primary</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR__PRIMARY = 7;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR__EXPRESSION = 8;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR__TYPE = 9;

  /**
   * The feature id for the '<em><b>Variable</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR__VARIABLE = 10;

  /**
   * The feature id for the '<em><b>Number</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR__NUMBER = 11;

  /**
   * The feature id for the '<em><b>Method Call</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR__METHOD_CALL = 12;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR__LEFT = 13;

  /**
   * The number of structural features of the '<em>Expr</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR_FEATURE_COUNT = 14;

  /**
   * The meta object id for the '{@link org.xtext.test.minijava.minijava.impl.MethodCallImpl <em>Method Call</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.test.minijava.minijava.impl.MethodCallImpl
   * @see org.xtext.test.minijava.minijava.impl.MinijavaPackageImpl#getMethodCall()
   * @generated
   */
  int METHOD_CALL = 13;

  /**
   * The feature id for the '<em><b>Method</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int METHOD_CALL__METHOD = 0;

  /**
   * The feature id for the '<em><b>Parameters</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int METHOD_CALL__PARAMETERS = 1;

  /**
   * The number of structural features of the '<em>Method Call</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int METHOD_CALL_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.test.minijava.minijava.impl.NumberValueImpl <em>Number Value</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.test.minijava.minijava.impl.NumberValueImpl
   * @see org.xtext.test.minijava.minijava.impl.MinijavaPackageImpl#getNumberValue()
   * @generated
   */
  int NUMBER_VALUE = 14;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMBER_VALUE__VALUE = 0;

  /**
   * The number of structural features of the '<em>Number Value</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMBER_VALUE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.test.minijava.minijava.impl.ExpressionImpl <em>Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.test.minijava.minijava.impl.ExpressionImpl
   * @see org.xtext.test.minijava.minijava.impl.MinijavaPackageImpl#getExpression()
   * @generated
   */
  int EXPRESSION = 15;

  /**
   * The feature id for the '<em><b>Addition</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__ADDITION = EXPR__ADDITION;

  /**
   * The feature id for the '<em><b>Multiplication</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__MULTIPLICATION = EXPR__MULTIPLICATION;

  /**
   * The feature id for the '<em><b>Negation Or Point Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__NEGATION_OR_POINT_EXPRESSION = EXPR__NEGATION_OR_POINT_EXPRESSION;

  /**
   * The feature id for the '<em><b>Point</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__POINT = EXPR__POINT;

  /**
   * The feature id for the '<em><b>Expression Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__EXPRESSION_TYPE = EXPR__EXPRESSION_TYPE;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__RIGHT = EXPR__RIGHT;

  /**
   * The feature id for the '<em><b>Square Brackets</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__SQUARE_BRACKETS = EXPR__SQUARE_BRACKETS;

  /**
   * The feature id for the '<em><b>Primary</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__PRIMARY = EXPR__PRIMARY;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__EXPRESSION = EXPR__EXPRESSION;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__TYPE = EXPR__TYPE;

  /**
   * The feature id for the '<em><b>Variable</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__VARIABLE = EXPR__VARIABLE;

  /**
   * The feature id for the '<em><b>Number</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__NUMBER = EXPR__NUMBER;

  /**
   * The feature id for the '<em><b>Method Call</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__METHOD_CALL = EXPR__METHOD_CALL;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__LEFT = EXPR__LEFT;

  /**
   * The number of structural features of the '<em>Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_FEATURE_COUNT = EXPR_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.test.minijava.minijava.impl.AdditionImpl <em>Addition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.test.minijava.minijava.impl.AdditionImpl
   * @see org.xtext.test.minijava.minijava.impl.MinijavaPackageImpl#getAddition()
   * @generated
   */
  int ADDITION = 16;

  /**
   * The feature id for the '<em><b>Addition</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADDITION__ADDITION = EXPR__ADDITION;

  /**
   * The feature id for the '<em><b>Multiplication</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADDITION__MULTIPLICATION = EXPR__MULTIPLICATION;

  /**
   * The feature id for the '<em><b>Negation Or Point Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADDITION__NEGATION_OR_POINT_EXPRESSION = EXPR__NEGATION_OR_POINT_EXPRESSION;

  /**
   * The feature id for the '<em><b>Point</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADDITION__POINT = EXPR__POINT;

  /**
   * The feature id for the '<em><b>Expression Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADDITION__EXPRESSION_TYPE = EXPR__EXPRESSION_TYPE;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADDITION__RIGHT = EXPR__RIGHT;

  /**
   * The feature id for the '<em><b>Square Brackets</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADDITION__SQUARE_BRACKETS = EXPR__SQUARE_BRACKETS;

  /**
   * The feature id for the '<em><b>Primary</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADDITION__PRIMARY = EXPR__PRIMARY;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADDITION__EXPRESSION = EXPR__EXPRESSION;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADDITION__TYPE = EXPR__TYPE;

  /**
   * The feature id for the '<em><b>Variable</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADDITION__VARIABLE = EXPR__VARIABLE;

  /**
   * The feature id for the '<em><b>Number</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADDITION__NUMBER = EXPR__NUMBER;

  /**
   * The feature id for the '<em><b>Method Call</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADDITION__METHOD_CALL = EXPR__METHOD_CALL;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADDITION__LEFT = EXPR__LEFT;

  /**
   * The number of structural features of the '<em>Addition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADDITION_FEATURE_COUNT = EXPR_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.test.minijava.minijava.impl.MultiplicationImpl <em>Multiplication</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.test.minijava.minijava.impl.MultiplicationImpl
   * @see org.xtext.test.minijava.minijava.impl.MinijavaPackageImpl#getMultiplication()
   * @generated
   */
  int MULTIPLICATION = 17;

  /**
   * The feature id for the '<em><b>Addition</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLICATION__ADDITION = EXPR__ADDITION;

  /**
   * The feature id for the '<em><b>Multiplication</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLICATION__MULTIPLICATION = EXPR__MULTIPLICATION;

  /**
   * The feature id for the '<em><b>Negation Or Point Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLICATION__NEGATION_OR_POINT_EXPRESSION = EXPR__NEGATION_OR_POINT_EXPRESSION;

  /**
   * The feature id for the '<em><b>Point</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLICATION__POINT = EXPR__POINT;

  /**
   * The feature id for the '<em><b>Expression Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLICATION__EXPRESSION_TYPE = EXPR__EXPRESSION_TYPE;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLICATION__RIGHT = EXPR__RIGHT;

  /**
   * The feature id for the '<em><b>Square Brackets</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLICATION__SQUARE_BRACKETS = EXPR__SQUARE_BRACKETS;

  /**
   * The feature id for the '<em><b>Primary</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLICATION__PRIMARY = EXPR__PRIMARY;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLICATION__EXPRESSION = EXPR__EXPRESSION;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLICATION__TYPE = EXPR__TYPE;

  /**
   * The feature id for the '<em><b>Variable</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLICATION__VARIABLE = EXPR__VARIABLE;

  /**
   * The feature id for the '<em><b>Number</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLICATION__NUMBER = EXPR__NUMBER;

  /**
   * The feature id for the '<em><b>Method Call</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLICATION__METHOD_CALL = EXPR__METHOD_CALL;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLICATION__LEFT = EXPR__LEFT;

  /**
   * The number of structural features of the '<em>Multiplication</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLICATION_FEATURE_COUNT = EXPR_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.test.minijava.minijava.impl.PointImpl <em>Point</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.test.minijava.minijava.impl.PointImpl
   * @see org.xtext.test.minijava.minijava.impl.MinijavaPackageImpl#getPoint()
   * @generated
   */
  int POINT = 18;

  /**
   * The feature id for the '<em><b>Addition</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POINT__ADDITION = EXPR__ADDITION;

  /**
   * The feature id for the '<em><b>Multiplication</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POINT__MULTIPLICATION = EXPR__MULTIPLICATION;

  /**
   * The feature id for the '<em><b>Negation Or Point Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POINT__NEGATION_OR_POINT_EXPRESSION = EXPR__NEGATION_OR_POINT_EXPRESSION;

  /**
   * The feature id for the '<em><b>Point</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POINT__POINT = EXPR__POINT;

  /**
   * The feature id for the '<em><b>Expression Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POINT__EXPRESSION_TYPE = EXPR__EXPRESSION_TYPE;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POINT__RIGHT = EXPR__RIGHT;

  /**
   * The feature id for the '<em><b>Square Brackets</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POINT__SQUARE_BRACKETS = EXPR__SQUARE_BRACKETS;

  /**
   * The feature id for the '<em><b>Primary</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POINT__PRIMARY = EXPR__PRIMARY;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POINT__EXPRESSION = EXPR__EXPRESSION;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POINT__TYPE = EXPR__TYPE;

  /**
   * The feature id for the '<em><b>Variable</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POINT__VARIABLE = EXPR__VARIABLE;

  /**
   * The feature id for the '<em><b>Number</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POINT__NUMBER = EXPR__NUMBER;

  /**
   * The feature id for the '<em><b>Method Call</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POINT__METHOD_CALL = EXPR__METHOD_CALL;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POINT__LEFT = EXPR__LEFT;

  /**
   * The number of structural features of the '<em>Point</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POINT_FEATURE_COUNT = EXPR_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.test.minijava.minijava.impl.SquareBracketsImpl <em>Square Brackets</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.test.minijava.minijava.impl.SquareBracketsImpl
   * @see org.xtext.test.minijava.minijava.impl.MinijavaPackageImpl#getSquareBrackets()
   * @generated
   */
  int SQUARE_BRACKETS = 19;

  /**
   * The feature id for the '<em><b>Addition</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SQUARE_BRACKETS__ADDITION = EXPR__ADDITION;

  /**
   * The feature id for the '<em><b>Multiplication</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SQUARE_BRACKETS__MULTIPLICATION = EXPR__MULTIPLICATION;

  /**
   * The feature id for the '<em><b>Negation Or Point Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SQUARE_BRACKETS__NEGATION_OR_POINT_EXPRESSION = EXPR__NEGATION_OR_POINT_EXPRESSION;

  /**
   * The feature id for the '<em><b>Point</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SQUARE_BRACKETS__POINT = EXPR__POINT;

  /**
   * The feature id for the '<em><b>Expression Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SQUARE_BRACKETS__EXPRESSION_TYPE = EXPR__EXPRESSION_TYPE;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SQUARE_BRACKETS__RIGHT = EXPR__RIGHT;

  /**
   * The feature id for the '<em><b>Square Brackets</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SQUARE_BRACKETS__SQUARE_BRACKETS = EXPR__SQUARE_BRACKETS;

  /**
   * The feature id for the '<em><b>Primary</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SQUARE_BRACKETS__PRIMARY = EXPR__PRIMARY;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SQUARE_BRACKETS__EXPRESSION = EXPR__EXPRESSION;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SQUARE_BRACKETS__TYPE = EXPR__TYPE;

  /**
   * The feature id for the '<em><b>Variable</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SQUARE_BRACKETS__VARIABLE = EXPR__VARIABLE;

  /**
   * The feature id for the '<em><b>Number</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SQUARE_BRACKETS__NUMBER = EXPR__NUMBER;

  /**
   * The feature id for the '<em><b>Method Call</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SQUARE_BRACKETS__METHOD_CALL = EXPR__METHOD_CALL;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SQUARE_BRACKETS__LEFT = EXPR__LEFT;

  /**
   * The number of structural features of the '<em>Square Brackets</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SQUARE_BRACKETS_FEATURE_COUNT = EXPR_FEATURE_COUNT + 0;


  /**
   * Returns the meta object for class '{@link org.xtext.test.minijava.minijava.Goal <em>Goal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Goal</em>'.
   * @see org.xtext.test.minijava.minijava.Goal
   * @generated
   */
  EClass getGoal();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.test.minijava.minijava.Goal#getPackage <em>Package</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Package</em>'.
   * @see org.xtext.test.minijava.minijava.Goal#getPackage()
   * @see #getGoal()
   * @generated
   */
  EAttribute getGoal_Package();

  /**
   * Returns the meta object for the attribute list '{@link org.xtext.test.minijava.minijava.Goal#getImportdecl <em>Importdecl</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Importdecl</em>'.
   * @see org.xtext.test.minijava.minijava.Goal#getImportdecl()
   * @see #getGoal()
   * @generated
   */
  EAttribute getGoal_Importdecl();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.test.minijava.minijava.Goal#getClassDeclarations <em>Class Declarations</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Class Declarations</em>'.
   * @see org.xtext.test.minijava.minijava.Goal#getClassDeclarations()
   * @see #getGoal()
   * @generated
   */
  EReference getGoal_ClassDeclarations();

  /**
   * Returns the meta object for class '{@link org.xtext.test.minijava.minijava.QualifiedNameList <em>Qualified Name List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Qualified Name List</em>'.
   * @see org.xtext.test.minijava.minijava.QualifiedNameList
   * @generated
   */
  EClass getQualifiedNameList();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.test.minijava.minijava.QualifiedNameList#getQualifiedName <em>Qualified Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Qualified Name</em>'.
   * @see org.xtext.test.minijava.minijava.QualifiedNameList#getQualifiedName()
   * @see #getQualifiedNameList()
   * @generated
   */
  EAttribute getQualifiedNameList_QualifiedName();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.test.minijava.minijava.QualifiedNameList#getQualifiedNameLi <em>Qualified Name Li</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Qualified Name Li</em>'.
   * @see org.xtext.test.minijava.minijava.QualifiedNameList#getQualifiedNameLi()
   * @see #getQualifiedNameList()
   * @generated
   */
  EReference getQualifiedNameList_QualifiedNameLi();

  /**
   * Returns the meta object for class '{@link org.xtext.test.minijava.minijava.QualifiedNameLi <em>Qualified Name Li</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Qualified Name Li</em>'.
   * @see org.xtext.test.minijava.minijava.QualifiedNameLi
   * @generated
   */
  EClass getQualifiedNameLi();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.test.minijava.minijava.QualifiedNameLi#getQualifiedName <em>Qualified Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Qualified Name</em>'.
   * @see org.xtext.test.minijava.minijava.QualifiedNameLi#getQualifiedName()
   * @see #getQualifiedNameLi()
   * @generated
   */
  EAttribute getQualifiedNameLi_QualifiedName();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.test.minijava.minijava.QualifiedNameLi#getQualifiedNameLi <em>Qualified Name Li</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Qualified Name Li</em>'.
   * @see org.xtext.test.minijava.minijava.QualifiedNameLi#getQualifiedNameLi()
   * @see #getQualifiedNameLi()
   * @generated
   */
  EReference getQualifiedNameLi_QualifiedNameLi();

  /**
   * Returns the meta object for class '{@link org.xtext.test.minijava.minijava.MainClass <em>Main Class</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Main Class</em>'.
   * @see org.xtext.test.minijava.minijava.MainClass
   * @generated
   */
  EClass getMainClass();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.test.minijava.minijava.MainClass#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.test.minijava.minijava.MainClass#getName()
   * @see #getMainClass()
   * @generated
   */
  EAttribute getMainClass_Name();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.test.minijava.minijava.MainClass#getVarDeclarations <em>Var Declarations</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Var Declarations</em>'.
   * @see org.xtext.test.minijava.minijava.MainClass#getVarDeclarations()
   * @see #getMainClass()
   * @generated
   */
  EReference getMainClass_VarDeclarations();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.test.minijava.minijava.MainClass#getMethodDeclarations <em>Method Declarations</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Method Declarations</em>'.
   * @see org.xtext.test.minijava.minijava.MainClass#getMethodDeclarations()
   * @see #getMainClass()
   * @generated
   */
  EReference getMainClass_MethodDeclarations();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.test.minijava.minijava.MainClass#getStatement <em>Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Statement</em>'.
   * @see org.xtext.test.minijava.minijava.MainClass#getStatement()
   * @see #getMainClass()
   * @generated
   */
  EReference getMainClass_Statement();

  /**
   * Returns the meta object for class '{@link org.xtext.test.minijava.minijava.ClassDeclaration <em>Class Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Class Declaration</em>'.
   * @see org.xtext.test.minijava.minijava.ClassDeclaration
   * @generated
   */
  EClass getClassDeclaration();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.test.minijava.minijava.ClassDeclaration#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.test.minijava.minijava.ClassDeclaration#getName()
   * @see #getClassDeclaration()
   * @generated
   */
  EAttribute getClassDeclaration_Name();

  /**
   * Returns the meta object for the reference '{@link org.xtext.test.minijava.minijava.ClassDeclaration#getQualifiedName <em>Qualified Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Qualified Name</em>'.
   * @see org.xtext.test.minijava.minijava.ClassDeclaration#getQualifiedName()
   * @see #getClassDeclaration()
   * @generated
   */
  EReference getClassDeclaration_QualifiedName();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.test.minijava.minijava.ClassDeclaration#getQualifiedNameList <em>Qualified Name List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Qualified Name List</em>'.
   * @see org.xtext.test.minijava.minijava.ClassDeclaration#getQualifiedNameList()
   * @see #getClassDeclaration()
   * @generated
   */
  EReference getClassDeclaration_QualifiedNameList();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.test.minijava.minijava.ClassDeclaration#getVarDeclarations <em>Var Declarations</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Var Declarations</em>'.
   * @see org.xtext.test.minijava.minijava.ClassDeclaration#getVarDeclarations()
   * @see #getClassDeclaration()
   * @generated
   */
  EReference getClassDeclaration_VarDeclarations();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.test.minijava.minijava.ClassDeclaration#getMethodDeclarations <em>Method Declarations</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Method Declarations</em>'.
   * @see org.xtext.test.minijava.minijava.ClassDeclaration#getMethodDeclarations()
   * @see #getClassDeclaration()
   * @generated
   */
  EReference getClassDeclaration_MethodDeclarations();

  /**
   * Returns the meta object for class '{@link org.xtext.test.minijava.minijava.Type <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Type</em>'.
   * @see org.xtext.test.minijava.minijava.Type
   * @generated
   */
  EClass getType();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.test.minijava.minijava.Type#getTypeName <em>Type Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Type Name</em>'.
   * @see org.xtext.test.minijava.minijava.Type#getTypeName()
   * @see #getType()
   * @generated
   */
  EAttribute getType_TypeName();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.test.minijava.minijava.Type#getQualifiedName <em>Qualified Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Qualified Name</em>'.
   * @see org.xtext.test.minijava.minijava.Type#getQualifiedName()
   * @see #getType()
   * @generated
   */
  EAttribute getType_QualifiedName();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.test.minijava.minijava.Type#getVarList <em>Var List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Var List</em>'.
   * @see org.xtext.test.minijava.minijava.Type#getVarList()
   * @see #getType()
   * @generated
   */
  EReference getType_VarList();

  /**
   * Returns the meta object for class '{@link org.xtext.test.minijava.minijava.VarDeclaration <em>Var Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Var Declaration</em>'.
   * @see org.xtext.test.minijava.minijava.VarDeclaration
   * @generated
   */
  EClass getVarDeclaration();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.test.minijava.minijava.VarDeclaration#getVariable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Variable</em>'.
   * @see org.xtext.test.minijava.minijava.VarDeclaration#getVariable()
   * @see #getVarDeclaration()
   * @generated
   */
  EReference getVarDeclaration_Variable();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.test.minijava.minijava.VarDeclaration#getVarLi <em>Var Li</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Var Li</em>'.
   * @see org.xtext.test.minijava.minijava.VarDeclaration#getVarLi()
   * @see #getVarDeclaration()
   * @generated
   */
  EReference getVarDeclaration_VarLi();

  /**
   * Returns the meta object for class '{@link org.xtext.test.minijava.minijava.Variable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Variable</em>'.
   * @see org.xtext.test.minijava.minijava.Variable
   * @generated
   */
  EClass getVariable();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.test.minijava.minijava.Variable#getVariableType <em>Variable Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Variable Type</em>'.
   * @see org.xtext.test.minijava.minijava.Variable#getVariableType()
   * @see #getVariable()
   * @generated
   */
  EReference getVariable_VariableType();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.test.minijava.minijava.Variable#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.test.minijava.minijava.Variable#getName()
   * @see #getVariable()
   * @generated
   */
  EAttribute getVariable_Name();

  /**
   * Returns the meta object for class '{@link org.xtext.test.minijava.minijava.VarList <em>Var List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Var List</em>'.
   * @see org.xtext.test.minijava.minijava.VarList
   * @generated
   */
  EClass getVarList();

  /**
   * Returns the meta object for class '{@link org.xtext.test.minijava.minijava.VarLi <em>Var Li</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Var Li</em>'.
   * @see org.xtext.test.minijava.minijava.VarLi
   * @generated
   */
  EClass getVarLi();

  /**
   * Returns the meta object for class '{@link org.xtext.test.minijava.minijava.Method <em>Method</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Method</em>'.
   * @see org.xtext.test.minijava.minijava.Method
   * @generated
   */
  EClass getMethod();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.test.minijava.minijava.Method#getMethodType <em>Method Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Method Type</em>'.
   * @see org.xtext.test.minijava.minijava.Method#getMethodType()
   * @see #getMethod()
   * @generated
   */
  EReference getMethod_MethodType();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.test.minijava.minijava.Method#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.test.minijava.minijava.Method#getName()
   * @see #getMethod()
   * @generated
   */
  EAttribute getMethod_Name();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.test.minijava.minijava.Method#getVarList <em>Var List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Var List</em>'.
   * @see org.xtext.test.minijava.minijava.Method#getVarList()
   * @see #getMethod()
   * @generated
   */
  EReference getMethod_VarList();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.test.minijava.minijava.Method#getLocalVarDeclarations <em>Local Var Declarations</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Local Var Declarations</em>'.
   * @see org.xtext.test.minijava.minijava.Method#getLocalVarDeclarations()
   * @see #getMethod()
   * @generated
   */
  EReference getMethod_LocalVarDeclarations();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.test.minijava.minijava.Method#getStatements <em>Statements</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Statements</em>'.
   * @see org.xtext.test.minijava.minijava.Method#getStatements()
   * @see #getMethod()
   * @generated
   */
  EReference getMethod_Statements();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.test.minijava.minijava.Method#getReturnExpression <em>Return Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Return Expression</em>'.
   * @see org.xtext.test.minijava.minijava.Method#getReturnExpression()
   * @see #getMethod()
   * @generated
   */
  EReference getMethod_ReturnExpression();

  /**
   * Returns the meta object for class '{@link org.xtext.test.minijava.minijava.Statement <em>Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Statement</em>'.
   * @see org.xtext.test.minijava.minijava.Statement
   * @generated
   */
  EClass getStatement();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.test.minijava.minijava.Statement#getStatementType <em>Statement Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Statement Type</em>'.
   * @see org.xtext.test.minijava.minijava.Statement#getStatementType()
   * @see #getStatement()
   * @generated
   */
  EAttribute getStatement_StatementType();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.test.minijava.minijava.Statement#getStatements <em>Statements</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Statements</em>'.
   * @see org.xtext.test.minijava.minijava.Statement#getStatements()
   * @see #getStatement()
   * @generated
   */
  EReference getStatement_Statements();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.test.minijava.minijava.Statement#getFirstExpression <em>First Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>First Expression</em>'.
   * @see org.xtext.test.minijava.minijava.Statement#getFirstExpression()
   * @see #getStatement()
   * @generated
   */
  EReference getStatement_FirstExpression();

  /**
   * Returns the meta object for the reference '{@link org.xtext.test.minijava.minijava.Statement#getVariable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Variable</em>'.
   * @see org.xtext.test.minijava.minijava.Statement#getVariable()
   * @see #getStatement()
   * @generated
   */
  EReference getStatement_Variable();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.test.minijava.minijava.Statement#isIsArrayElementAssignment <em>Is Array Element Assignment</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Is Array Element Assignment</em>'.
   * @see org.xtext.test.minijava.minijava.Statement#isIsArrayElementAssignment()
   * @see #getStatement()
   * @generated
   */
  EAttribute getStatement_IsArrayElementAssignment();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.test.minijava.minijava.Statement#getSecondExpression <em>Second Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Second Expression</em>'.
   * @see org.xtext.test.minijava.minijava.Statement#getSecondExpression()
   * @see #getStatement()
   * @generated
   */
  EReference getStatement_SecondExpression();

  /**
   * Returns the meta object for class '{@link org.xtext.test.minijava.minijava.Expr <em>Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expr</em>'.
   * @see org.xtext.test.minijava.minijava.Expr
   * @generated
   */
  EClass getExpr();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.test.minijava.minijava.Expr#getAddition <em>Addition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Addition</em>'.
   * @see org.xtext.test.minijava.minijava.Expr#getAddition()
   * @see #getExpr()
   * @generated
   */
  EReference getExpr_Addition();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.test.minijava.minijava.Expr#getMultiplication <em>Multiplication</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Multiplication</em>'.
   * @see org.xtext.test.minijava.minijava.Expr#getMultiplication()
   * @see #getExpr()
   * @generated
   */
  EReference getExpr_Multiplication();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.test.minijava.minijava.Expr#getNegationOrPointExpression <em>Negation Or Point Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Negation Or Point Expression</em>'.
   * @see org.xtext.test.minijava.minijava.Expr#getNegationOrPointExpression()
   * @see #getExpr()
   * @generated
   */
  EReference getExpr_NegationOrPointExpression();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.test.minijava.minijava.Expr#getPoint <em>Point</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Point</em>'.
   * @see org.xtext.test.minijava.minijava.Expr#getPoint()
   * @see #getExpr()
   * @generated
   */
  EReference getExpr_Point();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.test.minijava.minijava.Expr#getExpressionType <em>Expression Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Expression Type</em>'.
   * @see org.xtext.test.minijava.minijava.Expr#getExpressionType()
   * @see #getExpr()
   * @generated
   */
  EAttribute getExpr_ExpressionType();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.test.minijava.minijava.Expr#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see org.xtext.test.minijava.minijava.Expr#getRight()
   * @see #getExpr()
   * @generated
   */
  EReference getExpr_Right();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.test.minijava.minijava.Expr#getSquareBrackets <em>Square Brackets</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Square Brackets</em>'.
   * @see org.xtext.test.minijava.minijava.Expr#getSquareBrackets()
   * @see #getExpr()
   * @generated
   */
  EReference getExpr_SquareBrackets();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.test.minijava.minijava.Expr#getPrimary <em>Primary</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Primary</em>'.
   * @see org.xtext.test.minijava.minijava.Expr#getPrimary()
   * @see #getExpr()
   * @generated
   */
  EReference getExpr_Primary();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.test.minijava.minijava.Expr#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see org.xtext.test.minijava.minijava.Expr#getExpression()
   * @see #getExpr()
   * @generated
   */
  EReference getExpr_Expression();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.test.minijava.minijava.Expr#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type</em>'.
   * @see org.xtext.test.minijava.minijava.Expr#getType()
   * @see #getExpr()
   * @generated
   */
  EReference getExpr_Type();

  /**
   * Returns the meta object for the reference '{@link org.xtext.test.minijava.minijava.Expr#getVariable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Variable</em>'.
   * @see org.xtext.test.minijava.minijava.Expr#getVariable()
   * @see #getExpr()
   * @generated
   */
  EReference getExpr_Variable();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.test.minijava.minijava.Expr#getNumber <em>Number</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Number</em>'.
   * @see org.xtext.test.minijava.minijava.Expr#getNumber()
   * @see #getExpr()
   * @generated
   */
  EReference getExpr_Number();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.test.minijava.minijava.Expr#getMethodCall <em>Method Call</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Method Call</em>'.
   * @see org.xtext.test.minijava.minijava.Expr#getMethodCall()
   * @see #getExpr()
   * @generated
   */
  EReference getExpr_MethodCall();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.test.minijava.minijava.Expr#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see org.xtext.test.minijava.minijava.Expr#getLeft()
   * @see #getExpr()
   * @generated
   */
  EReference getExpr_Left();

  /**
   * Returns the meta object for class '{@link org.xtext.test.minijava.minijava.MethodCall <em>Method Call</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Method Call</em>'.
   * @see org.xtext.test.minijava.minijava.MethodCall
   * @generated
   */
  EClass getMethodCall();

  /**
   * Returns the meta object for the reference '{@link org.xtext.test.minijava.minijava.MethodCall#getMethod <em>Method</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Method</em>'.
   * @see org.xtext.test.minijava.minijava.MethodCall#getMethod()
   * @see #getMethodCall()
   * @generated
   */
  EReference getMethodCall_Method();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.test.minijava.minijava.MethodCall#getParameters <em>Parameters</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Parameters</em>'.
   * @see org.xtext.test.minijava.minijava.MethodCall#getParameters()
   * @see #getMethodCall()
   * @generated
   */
  EReference getMethodCall_Parameters();

  /**
   * Returns the meta object for class '{@link org.xtext.test.minijava.minijava.NumberValue <em>Number Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Number Value</em>'.
   * @see org.xtext.test.minijava.minijava.NumberValue
   * @generated
   */
  EClass getNumberValue();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.test.minijava.minijava.NumberValue#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see org.xtext.test.minijava.minijava.NumberValue#getValue()
   * @see #getNumberValue()
   * @generated
   */
  EAttribute getNumberValue_Value();

  /**
   * Returns the meta object for class '{@link org.xtext.test.minijava.minijava.Expression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression</em>'.
   * @see org.xtext.test.minijava.minijava.Expression
   * @generated
   */
  EClass getExpression();

  /**
   * Returns the meta object for class '{@link org.xtext.test.minijava.minijava.Addition <em>Addition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Addition</em>'.
   * @see org.xtext.test.minijava.minijava.Addition
   * @generated
   */
  EClass getAddition();

  /**
   * Returns the meta object for class '{@link org.xtext.test.minijava.minijava.Multiplication <em>Multiplication</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Multiplication</em>'.
   * @see org.xtext.test.minijava.minijava.Multiplication
   * @generated
   */
  EClass getMultiplication();

  /**
   * Returns the meta object for class '{@link org.xtext.test.minijava.minijava.Point <em>Point</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Point</em>'.
   * @see org.xtext.test.minijava.minijava.Point
   * @generated
   */
  EClass getPoint();

  /**
   * Returns the meta object for class '{@link org.xtext.test.minijava.minijava.SquareBrackets <em>Square Brackets</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Square Brackets</em>'.
   * @see org.xtext.test.minijava.minijava.SquareBrackets
   * @generated
   */
  EClass getSquareBrackets();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  MinijavaFactory getMinijavaFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link org.xtext.test.minijava.minijava.impl.GoalImpl <em>Goal</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.test.minijava.minijava.impl.GoalImpl
     * @see org.xtext.test.minijava.minijava.impl.MinijavaPackageImpl#getGoal()
     * @generated
     */
    EClass GOAL = eINSTANCE.getGoal();

    /**
     * The meta object literal for the '<em><b>Package</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute GOAL__PACKAGE = eINSTANCE.getGoal_Package();

    /**
     * The meta object literal for the '<em><b>Importdecl</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute GOAL__IMPORTDECL = eINSTANCE.getGoal_Importdecl();

    /**
     * The meta object literal for the '<em><b>Class Declarations</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference GOAL__CLASS_DECLARATIONS = eINSTANCE.getGoal_ClassDeclarations();

    /**
     * The meta object literal for the '{@link org.xtext.test.minijava.minijava.impl.QualifiedNameListImpl <em>Qualified Name List</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.test.minijava.minijava.impl.QualifiedNameListImpl
     * @see org.xtext.test.minijava.minijava.impl.MinijavaPackageImpl#getQualifiedNameList()
     * @generated
     */
    EClass QUALIFIED_NAME_LIST = eINSTANCE.getQualifiedNameList();

    /**
     * The meta object literal for the '<em><b>Qualified Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute QUALIFIED_NAME_LIST__QUALIFIED_NAME = eINSTANCE.getQualifiedNameList_QualifiedName();

    /**
     * The meta object literal for the '<em><b>Qualified Name Li</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference QUALIFIED_NAME_LIST__QUALIFIED_NAME_LI = eINSTANCE.getQualifiedNameList_QualifiedNameLi();

    /**
     * The meta object literal for the '{@link org.xtext.test.minijava.minijava.impl.QualifiedNameLiImpl <em>Qualified Name Li</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.test.minijava.minijava.impl.QualifiedNameLiImpl
     * @see org.xtext.test.minijava.minijava.impl.MinijavaPackageImpl#getQualifiedNameLi()
     * @generated
     */
    EClass QUALIFIED_NAME_LI = eINSTANCE.getQualifiedNameLi();

    /**
     * The meta object literal for the '<em><b>Qualified Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute QUALIFIED_NAME_LI__QUALIFIED_NAME = eINSTANCE.getQualifiedNameLi_QualifiedName();

    /**
     * The meta object literal for the '<em><b>Qualified Name Li</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference QUALIFIED_NAME_LI__QUALIFIED_NAME_LI = eINSTANCE.getQualifiedNameLi_QualifiedNameLi();

    /**
     * The meta object literal for the '{@link org.xtext.test.minijava.minijava.impl.MainClassImpl <em>Main Class</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.test.minijava.minijava.impl.MainClassImpl
     * @see org.xtext.test.minijava.minijava.impl.MinijavaPackageImpl#getMainClass()
     * @generated
     */
    EClass MAIN_CLASS = eINSTANCE.getMainClass();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MAIN_CLASS__NAME = eINSTANCE.getMainClass_Name();

    /**
     * The meta object literal for the '<em><b>Var Declarations</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MAIN_CLASS__VAR_DECLARATIONS = eINSTANCE.getMainClass_VarDeclarations();

    /**
     * The meta object literal for the '<em><b>Method Declarations</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MAIN_CLASS__METHOD_DECLARATIONS = eINSTANCE.getMainClass_MethodDeclarations();

    /**
     * The meta object literal for the '<em><b>Statement</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MAIN_CLASS__STATEMENT = eINSTANCE.getMainClass_Statement();

    /**
     * The meta object literal for the '{@link org.xtext.test.minijava.minijava.impl.ClassDeclarationImpl <em>Class Declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.test.minijava.minijava.impl.ClassDeclarationImpl
     * @see org.xtext.test.minijava.minijava.impl.MinijavaPackageImpl#getClassDeclaration()
     * @generated
     */
    EClass CLASS_DECLARATION = eINSTANCE.getClassDeclaration();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CLASS_DECLARATION__NAME = eINSTANCE.getClassDeclaration_Name();

    /**
     * The meta object literal for the '<em><b>Qualified Name</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CLASS_DECLARATION__QUALIFIED_NAME = eINSTANCE.getClassDeclaration_QualifiedName();

    /**
     * The meta object literal for the '<em><b>Qualified Name List</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CLASS_DECLARATION__QUALIFIED_NAME_LIST = eINSTANCE.getClassDeclaration_QualifiedNameList();

    /**
     * The meta object literal for the '<em><b>Var Declarations</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CLASS_DECLARATION__VAR_DECLARATIONS = eINSTANCE.getClassDeclaration_VarDeclarations();

    /**
     * The meta object literal for the '<em><b>Method Declarations</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CLASS_DECLARATION__METHOD_DECLARATIONS = eINSTANCE.getClassDeclaration_MethodDeclarations();

    /**
     * The meta object literal for the '{@link org.xtext.test.minijava.minijava.impl.TypeImpl <em>Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.test.minijava.minijava.impl.TypeImpl
     * @see org.xtext.test.minijava.minijava.impl.MinijavaPackageImpl#getType()
     * @generated
     */
    EClass TYPE = eINSTANCE.getType();

    /**
     * The meta object literal for the '<em><b>Type Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TYPE__TYPE_NAME = eINSTANCE.getType_TypeName();

    /**
     * The meta object literal for the '<em><b>Qualified Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TYPE__QUALIFIED_NAME = eINSTANCE.getType_QualifiedName();

    /**
     * The meta object literal for the '<em><b>Var List</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TYPE__VAR_LIST = eINSTANCE.getType_VarList();

    /**
     * The meta object literal for the '{@link org.xtext.test.minijava.minijava.impl.VarDeclarationImpl <em>Var Declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.test.minijava.minijava.impl.VarDeclarationImpl
     * @see org.xtext.test.minijava.minijava.impl.MinijavaPackageImpl#getVarDeclaration()
     * @generated
     */
    EClass VAR_DECLARATION = eINSTANCE.getVarDeclaration();

    /**
     * The meta object literal for the '<em><b>Variable</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VAR_DECLARATION__VARIABLE = eINSTANCE.getVarDeclaration_Variable();

    /**
     * The meta object literal for the '<em><b>Var Li</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VAR_DECLARATION__VAR_LI = eINSTANCE.getVarDeclaration_VarLi();

    /**
     * The meta object literal for the '{@link org.xtext.test.minijava.minijava.impl.VariableImpl <em>Variable</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.test.minijava.minijava.impl.VariableImpl
     * @see org.xtext.test.minijava.minijava.impl.MinijavaPackageImpl#getVariable()
     * @generated
     */
    EClass VARIABLE = eINSTANCE.getVariable();

    /**
     * The meta object literal for the '<em><b>Variable Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIABLE__VARIABLE_TYPE = eINSTANCE.getVariable_VariableType();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VARIABLE__NAME = eINSTANCE.getVariable_Name();

    /**
     * The meta object literal for the '{@link org.xtext.test.minijava.minijava.impl.VarListImpl <em>Var List</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.test.minijava.minijava.impl.VarListImpl
     * @see org.xtext.test.minijava.minijava.impl.MinijavaPackageImpl#getVarList()
     * @generated
     */
    EClass VAR_LIST = eINSTANCE.getVarList();

    /**
     * The meta object literal for the '{@link org.xtext.test.minijava.minijava.impl.VarLiImpl <em>Var Li</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.test.minijava.minijava.impl.VarLiImpl
     * @see org.xtext.test.minijava.minijava.impl.MinijavaPackageImpl#getVarLi()
     * @generated
     */
    EClass VAR_LI = eINSTANCE.getVarLi();

    /**
     * The meta object literal for the '{@link org.xtext.test.minijava.minijava.impl.MethodImpl <em>Method</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.test.minijava.minijava.impl.MethodImpl
     * @see org.xtext.test.minijava.minijava.impl.MinijavaPackageImpl#getMethod()
     * @generated
     */
    EClass METHOD = eINSTANCE.getMethod();

    /**
     * The meta object literal for the '<em><b>Method Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference METHOD__METHOD_TYPE = eINSTANCE.getMethod_MethodType();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute METHOD__NAME = eINSTANCE.getMethod_Name();

    /**
     * The meta object literal for the '<em><b>Var List</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference METHOD__VAR_LIST = eINSTANCE.getMethod_VarList();

    /**
     * The meta object literal for the '<em><b>Local Var Declarations</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference METHOD__LOCAL_VAR_DECLARATIONS = eINSTANCE.getMethod_LocalVarDeclarations();

    /**
     * The meta object literal for the '<em><b>Statements</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference METHOD__STATEMENTS = eINSTANCE.getMethod_Statements();

    /**
     * The meta object literal for the '<em><b>Return Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference METHOD__RETURN_EXPRESSION = eINSTANCE.getMethod_ReturnExpression();

    /**
     * The meta object literal for the '{@link org.xtext.test.minijava.minijava.impl.StatementImpl <em>Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.test.minijava.minijava.impl.StatementImpl
     * @see org.xtext.test.minijava.minijava.impl.MinijavaPackageImpl#getStatement()
     * @generated
     */
    EClass STATEMENT = eINSTANCE.getStatement();

    /**
     * The meta object literal for the '<em><b>Statement Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute STATEMENT__STATEMENT_TYPE = eINSTANCE.getStatement_StatementType();

    /**
     * The meta object literal for the '<em><b>Statements</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STATEMENT__STATEMENTS = eINSTANCE.getStatement_Statements();

    /**
     * The meta object literal for the '<em><b>First Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STATEMENT__FIRST_EXPRESSION = eINSTANCE.getStatement_FirstExpression();

    /**
     * The meta object literal for the '<em><b>Variable</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STATEMENT__VARIABLE = eINSTANCE.getStatement_Variable();

    /**
     * The meta object literal for the '<em><b>Is Array Element Assignment</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute STATEMENT__IS_ARRAY_ELEMENT_ASSIGNMENT = eINSTANCE.getStatement_IsArrayElementAssignment();

    /**
     * The meta object literal for the '<em><b>Second Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STATEMENT__SECOND_EXPRESSION = eINSTANCE.getStatement_SecondExpression();

    /**
     * The meta object literal for the '{@link org.xtext.test.minijava.minijava.impl.ExprImpl <em>Expr</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.test.minijava.minijava.impl.ExprImpl
     * @see org.xtext.test.minijava.minijava.impl.MinijavaPackageImpl#getExpr()
     * @generated
     */
    EClass EXPR = eINSTANCE.getExpr();

    /**
     * The meta object literal for the '<em><b>Addition</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPR__ADDITION = eINSTANCE.getExpr_Addition();

    /**
     * The meta object literal for the '<em><b>Multiplication</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPR__MULTIPLICATION = eINSTANCE.getExpr_Multiplication();

    /**
     * The meta object literal for the '<em><b>Negation Or Point Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPR__NEGATION_OR_POINT_EXPRESSION = eINSTANCE.getExpr_NegationOrPointExpression();

    /**
     * The meta object literal for the '<em><b>Point</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPR__POINT = eINSTANCE.getExpr_Point();

    /**
     * The meta object literal for the '<em><b>Expression Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXPR__EXPRESSION_TYPE = eINSTANCE.getExpr_ExpressionType();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPR__RIGHT = eINSTANCE.getExpr_Right();

    /**
     * The meta object literal for the '<em><b>Square Brackets</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPR__SQUARE_BRACKETS = eINSTANCE.getExpr_SquareBrackets();

    /**
     * The meta object literal for the '<em><b>Primary</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPR__PRIMARY = eINSTANCE.getExpr_Primary();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPR__EXPRESSION = eINSTANCE.getExpr_Expression();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPR__TYPE = eINSTANCE.getExpr_Type();

    /**
     * The meta object literal for the '<em><b>Variable</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPR__VARIABLE = eINSTANCE.getExpr_Variable();

    /**
     * The meta object literal for the '<em><b>Number</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPR__NUMBER = eINSTANCE.getExpr_Number();

    /**
     * The meta object literal for the '<em><b>Method Call</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPR__METHOD_CALL = eINSTANCE.getExpr_MethodCall();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPR__LEFT = eINSTANCE.getExpr_Left();

    /**
     * The meta object literal for the '{@link org.xtext.test.minijava.minijava.impl.MethodCallImpl <em>Method Call</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.test.minijava.minijava.impl.MethodCallImpl
     * @see org.xtext.test.minijava.minijava.impl.MinijavaPackageImpl#getMethodCall()
     * @generated
     */
    EClass METHOD_CALL = eINSTANCE.getMethodCall();

    /**
     * The meta object literal for the '<em><b>Method</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference METHOD_CALL__METHOD = eINSTANCE.getMethodCall_Method();

    /**
     * The meta object literal for the '<em><b>Parameters</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference METHOD_CALL__PARAMETERS = eINSTANCE.getMethodCall_Parameters();

    /**
     * The meta object literal for the '{@link org.xtext.test.minijava.minijava.impl.NumberValueImpl <em>Number Value</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.test.minijava.minijava.impl.NumberValueImpl
     * @see org.xtext.test.minijava.minijava.impl.MinijavaPackageImpl#getNumberValue()
     * @generated
     */
    EClass NUMBER_VALUE = eINSTANCE.getNumberValue();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NUMBER_VALUE__VALUE = eINSTANCE.getNumberValue_Value();

    /**
     * The meta object literal for the '{@link org.xtext.test.minijava.minijava.impl.ExpressionImpl <em>Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.test.minijava.minijava.impl.ExpressionImpl
     * @see org.xtext.test.minijava.minijava.impl.MinijavaPackageImpl#getExpression()
     * @generated
     */
    EClass EXPRESSION = eINSTANCE.getExpression();

    /**
     * The meta object literal for the '{@link org.xtext.test.minijava.minijava.impl.AdditionImpl <em>Addition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.test.minijava.minijava.impl.AdditionImpl
     * @see org.xtext.test.minijava.minijava.impl.MinijavaPackageImpl#getAddition()
     * @generated
     */
    EClass ADDITION = eINSTANCE.getAddition();

    /**
     * The meta object literal for the '{@link org.xtext.test.minijava.minijava.impl.MultiplicationImpl <em>Multiplication</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.test.minijava.minijava.impl.MultiplicationImpl
     * @see org.xtext.test.minijava.minijava.impl.MinijavaPackageImpl#getMultiplication()
     * @generated
     */
    EClass MULTIPLICATION = eINSTANCE.getMultiplication();

    /**
     * The meta object literal for the '{@link org.xtext.test.minijava.minijava.impl.PointImpl <em>Point</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.test.minijava.minijava.impl.PointImpl
     * @see org.xtext.test.minijava.minijava.impl.MinijavaPackageImpl#getPoint()
     * @generated
     */
    EClass POINT = eINSTANCE.getPoint();

    /**
     * The meta object literal for the '{@link org.xtext.test.minijava.minijava.impl.SquareBracketsImpl <em>Square Brackets</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.test.minijava.minijava.impl.SquareBracketsImpl
     * @see org.xtext.test.minijava.minijava.impl.MinijavaPackageImpl#getSquareBrackets()
     * @generated
     */
    EClass SQUARE_BRACKETS = eINSTANCE.getSquareBrackets();

  }

} //MinijavaPackage
